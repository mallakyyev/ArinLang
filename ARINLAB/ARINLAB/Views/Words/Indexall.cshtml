@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@using System.Globalization
@{
    ViewData["Title"] = SharedLocalizer["Words"];

}
@using ARINLAB.Areas.Admin.Utils
@using ARINLAB.Controllers
@model UserDictionaryModel;
<div class="flex justify-between flex-col xl:flex-row py-10 h-full xl:mb-0 blog">
    <div class="xl:w-8/12 xl:px-0 px-4 flex-grow">
        @if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {
            <h2 dir="rtl" class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-right:10%">@SharedLocalizer["Words Collection"] </h2>
        }
        else
        {
            <h2 class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-left:10%">@SharedLocalizer["Words Collection"] </h2>

        }
        <div class="row" style="padding-left: 10%; padding-right: 10%;">
            <div id="gridContainer">
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        $(function () {
            let url = `@API.GetAllWordsWithDictId/@Model.DictionaryId`;
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';
            $("#gridContainer").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),

                onCellClick: function (e) {
                    if (e.columnIndex != 2) {
                        var idString = e.data.id;
                        var url = `@Url.Action("Details", "Words", new { Area = "" })`;
                        window.location = url + '?id=' + idString;
                    }
                },

                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },

                paging: {
                    pageSize: 15
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20, 40 ],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                loadPanel: {
                    enabled: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: true,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: true
                },


                allowColumnReordering: false,

                columns: [

                    {
                        caption: '@SharedLocalizer["Arab Word"]',
                        dataField: "arabWord",
                        allowHeaderFiltering: true
                    },
                    {
                        caption: '@SharedLocalizer["Türkmen Word"]',
                        dataField: "otherWord",
                        allowHeaderFiltering: true
                    },

                    {
                        type: "buttons",
                        width: 60,
                         caption: '@SharedLocalizer["Share"]',
                        buttons: [
                            {
                                hint: '@SharedLocalizer["Share"]',
                                icon: "share",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open("GET", "/api/ExportAPI/" + e.row.data.arabWord+"/" + e.row.data.otherWord, false);
                                    req.send();
                                    var a = document.createElement("a");
                                    a.setAttribute("href", ""+req.responseText);
                                    a.setAttribute("download", "" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            }                            
                        ]
                    }
                ]
            });
        });

        function playAudio(id) {

            var x = document.getElementById(id);
            var bt = document.getElementById('_' + id);
            if (bt.textContent == '@SharedLocalizer["Play"]') {
                x.play();
                bt.textContent = '@SharedLocalizer["Stop"]';
            } else {
                x.pause();
                bt.textContent = '@SharedLocalizer["Play"]';
            }

        }

        function pauseAudio(id) {

            var x = document.getElementById(id);
            x.pause();
        }
    </script>
}
