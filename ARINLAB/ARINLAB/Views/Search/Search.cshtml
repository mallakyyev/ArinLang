@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer
@inject ARINLAB.Services.SessionService.UserDictionary _userDict;
@using System.Globalization
@{
    ViewData["Title"] = SharedLocalizer["Search Result"];

}
@using ARINLAB.Areas.Admin.Utils
@using ARINLAB.Controllers
@model SearchModel

<div class="row blog">


    <div class="col-sm-12 ">
        <div class="col-sm-12">
            <h1 class="md:text-4xl text-2xl font-semibold mb-10" style="font: 900; text-align:-webkit-center; ">@SharedLocalizer["Search result for"] "@Model.Term"</h1>
        </div>
        @if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {
            <h2 dir="rtl" class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-right:10%">@SharedLocalizer["Found in Words"]: </h2>
        }
        else
        {
            <h2 class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-left:10%">@SharedLocalizer["Found in Words"]: </h2>
        }
        <div class="row" style="padding-left: 10%; padding-right: 10%;">
            <div id="gridContainerWords">
            </div>
        </div>

    </div>
    <div class="col-sm-12">
        @if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {
            <h2 dir="rtl" class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-right:10%">@SharedLocalizer["Found in Phrasebook"]: </h2>
        }
        else
        {
            <h2 class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-left:10%">@SharedLocalizer["Found in Phrasebook"]: </h2>
        }
        <div class="row" style="padding-left: 10%; padding-right: 10%;">
            <div id="gridContainerClause">
            </div>
        </div>
    </div>

    <div class="col-sm-12">
        @if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {
            <h2 dir="rtl" class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-right:10%">@SharedLocalizer["Found in Names"]: </h2>
        }
        else
        {
            <h2 class="md:text-4xl text-2xl font-semibold mb-10" style="font:900; padding-left:10%">@SharedLocalizer["Found in Names"]: </h2>
        }
        <div class="row" style="padding-left: 10%; padding-right: 10%;">
            <div id="gridContainerNames">
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            let url = `@API.SearchWords/@Html.Raw(Model.Term)/@Model.DictionaryId`;
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';


            $("#gridContainerWords").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                columnHidingEnabled: true,
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {

                    rowRenderingMode: "virtual"
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: false
                },
                stateStoring: {
                    enabled:false,
                    type: "localStorage",
                    storageKey: "WordClauseAdmin"
                },
                 onCellClick: function (e) {
                     if (e.columnIndex == 0 || e.columnIndex == 2 || e.columnIndex == 3) {
                        var idString = e.data.id;
                        var url = `@Url.Action("Details", "Words", new { Area = "" })`;
                        window.location = url + '?id=' + idString;
                    }
                },
                columns: [
                    {
                        caption: '@SharedLocalizer["Arab Words"]',
                        dataField: "arabWord",

                        allowHeaderFiltering: false,
                        alignment: "center"
                    },
                    {
                        caption: ' ',
                        dataField: "arabVoice",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                const voices = options.value.split(";");
                                for (let i = 0; i < voices.length; i++) {
                                    $('<audio>', { id: voices[i], })
                                        .append($('<source>', { src: '@(SD.HostName)' + voices[i], type: 'audio/mpeg' }))
                                    .appendTo(element);
                                }
                                 $('<div>', { class: 'cell' })
                                     .append($('<img>', {
                                         onclick: 'playAudioM(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 10px; cursor:pointer',
                                         src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width: 110,
                    },
                    {
                        caption: '@SharedLocalizer["Arabic Word in"] @Html.Raw(_userDict.GetDictionaryName())',
                        dataField: "otherWord",
                        //width: 300,
                        allowHeaderFiltering: false,
                        alignment: "center"
                    },
                    {
                        caption: ' ',
                        dataField: "otherVoice",
                        width: 110,
                        cellTemplate: function (element, options) {
                            if (options.value) {
                                const voices = options.value.split(";");
                                for (let i = 0; i < voices.length; i++) {
                                    $('<audio>', { id: voices[i], })
                                        .append($('<source>', { src: '@(SD.HostName)' + voices[i], type: 'audio/mpeg' }))
                                    .appendTo(element);
                                }
                                $('<div>', { class: 'cell' })                                    
                                    .append($('<img>', {
                                        onclick: 'playAudioM(\'' + options.value + '\')',
                                        style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                        src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    }))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        type: "buttons",
                        width: 55,
                        caption: '@SharedLocalizer["Share"]',
                        buttons: [
                            {
                                hint: '@SharedLocalizer["Share"]',
                                icon: "share",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open("GET", "/api/ExportAPI/" + e.row.data.arabWord+"/" + e.row.data.otherWord, false);
                                    req.send();
                                    var a = document.createElement("a");
                                    a.setAttribute("href", ""+req.responseText);
                                    a.setAttribute("download", "" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }
                ]
            });
        });

        function playAudioM(id) {
            const voices = id.split(";");
            const ind = Math.floor(Math.random() * (voices.length));           
            var x = document.getElementById(voices[ind]);
            x.play();
        }

        function playAudio(id) {
            var x = document.getElementById(id);
            x.play();
        }
        function pauseAudio(id) {
            var x = document.getElementById(id);
            x.pause();
        }



    </script>
    <script>
        $(function () {
            let url = `@API.SearchClauses/@Html.Raw(Model.Term)/@Model.DictionaryId`;
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';

            $("#gridContainerClause").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                columnHidingEnabled: true,
                onCellClick: function (e) {
                    if (e.columnIndex == 0 || e.columnIndex == 3 || e.columnIndex == 2) {
                        var idString = e.data.id;
                        var url = `@Url.Action("Details", "WordClauses", new { Area = "" })`;
                        window.location = url + '/' + idString;
                    }
                },
                //selection: {
                //    mode: "multiple"
                //},
                "export": {
                    enabled: false,
                    fileName: "WordClause",
                    allowExportSelectedData: false
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {

                    rowRenderingMode: "virtual"
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled : true,
                showBorders: false,
                searchPanel: {
                    visible: false
                },
                stateStoring: {
                    enabled:false,
                    type: "localStorage",
                    storageKey: "WordClauseAdmin"
                },
                columns: [
                    {
                        caption: '@SharedLocalizer["Sentence in Arabic"]',
                        dataField: "arabClause",
                        allowHeaderFiltering: false,
                        alignment: "center"
                    },
                    {
                        caption: ' ',
                        dataField: "arabVoice",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '@(SD.HostName)' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width: 110,
                    },
                    {
                        caption: '@SharedLocalizer["Sentence in"] @Html.Raw(_userDict.GetDictionaryName())',
                         dataField: "otherClause",
                         allowHeaderFiltering: false,
                         alignment: "center"
                    },
                     {
                        caption: ' ',
                        dataField: "otherVoice",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '@(SD.HostName)' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                     {
                        caption: '@SharedLocalizer["Category"]',
                        dataField: "categoryName",
                         allowHeaderFiltering: true,
                         alignment: "center",
                         width:140,
                    },
                     {
                        type: "buttons",
                        width: 55,
                        caption: '@SharedLocalizer["Share"]',
                        buttons: [
                            {
                                hint: '@SharedLocalizer["Share"]',
                                icon: "share",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open("GET", "/api/ExportAPI/Phrase/" + e.row.data.arabClause + "/" + e.row.data.otherReader + "/" + e.row.data.otherClause + "/" + e.row.data.arabReader, false);
                                    req.send();
                                    var a = document.createElement("a");
                                    a.setAttribute("href", ""+req.responseText);
                                    a.setAttribute("download", "" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }

                ]
            });
        });

    </script>
    <script>
            $(function () {
                let url = `@API.SearchNames/@Html.Raw(Model.Term)/@Model.DictionaryId`;
            var returnUrl = '@Context.Request.Path@Context.Request.QueryString';


                $("#gridContainerNames").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                    columnHidingEnabled: true,
                onInitNewRow: function(e) {
                    var url = `@Url.Action("Create", "Names", new { Area = "Admin" })`;
                    window.location = url;
                },
                onCellClick: function (e) {
                    if (e.columnIndex == 0 || e.columnIndex == 3) {
                        var idString = e.data.id;
                        var url = `@Url.Action("Details", "Names", new { Area = "" })`;
                        window.location = url + '?id=' + idString;
                    }
                },
                //selection: {
                //    mode: "multiple"
                //},
                "export": {
                    enabled: false,
                    fileName: "Documents",
                    allowExportSelectedData: false
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {
                   
                    rowRenderingMode: "virtual"
                },
                paging: {
                    pageSize: 10
                    },
                    pager: {
                        visible: true,
                        allowedPageSizes: [10, 20],
                        showPageSizeSelector: true,
                        showInfo: true,
                        showNavigationButtons: true,
                    },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: false
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                hoverStateEnabled: true,
                rowAlternationEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: false
                },

                stateStoring: {
                    enabled: false,
                    type: "localStorage",
                    storageKey: "partnersAdmin"
                },
                allowColumnReordering: false,
                columns: [
                    {
                        caption: '@SharedLocalizer["Names in Arabic"]',
                        dataField: "arabName",
                        allowHeaderFiltering: true,
                        alignment: "center",

                    },
                     {
                        caption: ' ',
                         dataField: "arabVoice",
                         width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '@(SD.HostName)' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width : 110,
                    },
                    {
                        caption: '@Html.Raw(_userDict.GetDictionaryName()) @SharedLocalizer["Names"]',
                        dataField: "otherName",
                        allowHeaderFiltering: true,
                        alignment: "center",

                    },
                     {
                        caption: ' ',
                        dataField: "otherVoice",
                         width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '@(SD.HostName)' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '@(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg")',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                      {
                        type: "buttons",
                        width: 55,
                        caption: '@SharedLocalizer["Share"]',
                        buttons: [
                            {
                                hint: '@SharedLocalizer["Share"]',
                                icon: "share",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open("GET", "/api/ExportAPI/" + e.row.data.arabName + "/" + e.row.data.otherName, false);
                                    req.send();
                                    var a = document.createElement("a");
                                    a.setAttribute("href", ""+req.responseText);
                                    a.setAttribute("download", "" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }
                ]
            });
        });
    </script>
}
