#pragma checksum "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "391e09aa3b81c062c5f733b2862ecacf9af67732"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Search_Search), @"mvc.1.0.view", @"/Views/Search/Search.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ARINLAB\ARINLAB\ARINLAB\Views\_ViewImports.cshtml"
using ARINLAB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ARINLAB\ARINLAB\ARINLAB\Views\_ViewImports.cshtml"
using ARINLAB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
using ARINLAB.Areas.Admin.Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
using ARINLAB.Controllers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"391e09aa3b81c062c5f733b2862ecacf9af67732", @"/Views/Search/Search.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fa1d5c591814f7725771882b633ab2ec01fb489", @"/Views/_ViewImports.cshtml")]
    public class Views_Search_Search : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<SearchModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 6 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
  
    ViewData["Title"] = SharedLocalizer["Search Result"];


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"row blog\">\r\n\r\n\r\n    <div class=\"col-sm-12 \">\r\n        <div class=\"col-sm-12\">\r\n            <h1 class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font: 900; text-align:-webkit-center; \">");
#nullable restore
#line 19 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                                           Write(SharedLocalizer["Search result for"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" \"");
#nullable restore
#line 19 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                                                                                  Write(Model.Term);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"</h1>\r\n        </div>\r\n");
#nullable restore
#line 21 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
         if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 dir=\"rtl\" class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-right:10%\">");
#nullable restore
#line 23 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                                          Write(SharedLocalizer["Found in Words"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 24 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }
        else
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-left:10%\">");
#nullable restore
#line 27 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                               Write(SharedLocalizer["Found in Words"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 28 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"row\" style=\"padding-left: 10%; padding-right: 10%;\">\r\n            <div id=\"gridContainerWords\">\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-sm-12\">\r\n");
#nullable restore
#line 36 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
         if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 dir=\"rtl\" class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-right:10%\">");
#nullable restore
#line 38 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                                          Write(SharedLocalizer["Found in Phrasebook"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 39 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }
        else
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-left:10%\">");
#nullable restore
#line 42 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                               Write(SharedLocalizer["Found in Phrasebook"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 43 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"row\" style=\"padding-left: 10%; padding-right: 10%;\">\r\n            <div id=\"gridContainerClause\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-sm-12\">\r\n");
#nullable restore
#line 51 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
         if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 dir=\"rtl\" class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-right:10%\">");
#nullable restore
#line 53 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                                          Write(SharedLocalizer["Found in Names"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 54 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }
        else
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-left:10%\">");
#nullable restore
#line 57 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                                               Write(SharedLocalizer["Found in Names"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(": </h2>\r\n");
#nullable restore
#line 58 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"row\" style=\"padding-left: 10%; padding-right: 10%;\">\r\n            <div id=\"gridContainerNames\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <script>\r\n        $(function () {\r\n            let url = `");
#nullable restore
#line 69 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                  Write(API.SearchWords);

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 69 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                   Write(Html.Raw(Model.Term));

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 69 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                         Write(Model.DictionaryId);

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n            var returnUrl = \'");
#nullable restore
#line 70 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                        Write(Context.Request.Path);

#line default
#line hidden
#nullable disable
#nullable restore
#line 70 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                             Write(Context.Request.QueryString);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';


            $(""#gridContainerWords"").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""id"",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                columnHidingEnabled: true,
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {

                    rowRenderingMode: ""virtual""
                },
                paging: {
                    pageSize: 10
              ");
                WriteLiteral(@"  },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: false
                },
                stateStoring: {
                    enabled:false,
                    type: ""localStorage"",
          ");
                WriteLiteral(@"          storageKey: ""WordClauseAdmin""
                },
                 onCellClick: function (e) {
                     if (e.columnIndex == 0 || e.columnIndex == 2 || e.columnIndex == 3) {
                        var idString = e.data.id;
                        var url = `");
#nullable restore
#line 133 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                              Write(Url.Action("Details", "Words", new { Area = "" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n                        window.location = url + \'?id=\' + idString;\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        caption: \'");
#nullable restore
#line 139 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Arab Words"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""arabWord"",

                        allowHeaderFiltering: false,
                        alignment: ""center""
                    },
                    {
                        caption: ' ',
                        dataField: ""arabVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                const voices = options.value.split("";"");
                                for (let i = 0; i < voices.length; i++) {
                                    $('<audio>', { id: voices[i], })
                                        .append($('<source>', { src: '");
#nullable restore
#line 154 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                  Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + voices[i], type: 'audio/mpeg' }))
                                    .appendTo(element);
                                }
                                 $('<div>', { class: 'cell' })
                                     .append($('<img>', {
                                         onclick: 'playAudioM(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 10px; cursor:pointer',
                                         src: '");
#nullable restore
#line 161 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width: 110,
                    },
                    {
                        caption: '");
#nullable restore
#line 176 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Arabic Word in"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 176 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                Write(Html.Raw(_userDict.GetDictionaryName()));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""otherWord"",
                        //width: 300,
                        allowHeaderFiltering: false,
                        alignment: ""center""
                    },
                    {
                        caption: ' ',
                        dataField: ""otherVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                            if (options.value) {
                                const voices = options.value.split("";"");
                                for (let i = 0; i < voices.length; i++) {
                                    $('<audio>', { id: voices[i], })
                                        .append($('<source>', { src: '");
#nullable restore
#line 191 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                  Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + voices[i], type: 'audio/mpeg' }))
                                    .appendTo(element);
                                }
                                $('<div>', { class: 'cell' })                                    
                                    .append($('<img>', {
                                        onclick: 'playAudioM(\'' + options.value + '\')',
                                        style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                        src: '");
#nullable restore
#line 198 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                          Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    }))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        type: ""buttons"",
                        width: 55,
                        caption: '");
#nullable restore
#line 211 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\',\r\n                        buttons: [\r\n                            {\r\n                                hint: \'");
#nullable restore
#line 214 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                  Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                icon: ""share"",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open(""GET"", ""/api/ExportAPI/"" + e.row.data.arabWord+""/"" + e.row.data.otherWord, false);
                                    req.send();
                                    var a = document.createElement(""a"");
                                    a.setAttribute(""href"", """"+req.responseText);
                                    a.setAttribute(""download"", """" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }
                ]
            });
        });

        function playAudioM(id) {
            const voices = id.split("";""");
                WriteLiteral(@");
            const ind = Math.floor(Math.random() * (voices.length));           
            var x = document.getElementById(voices[ind]);
            x.play();
        }

        function playAudio(id) {
            var x = document.getElementById(id);
            x.play();
        }
        function pauseAudio(id) {
            var x = document.getElementById(id);
            x.pause();
        }



    </script>
    <script>
        $(function () {
            let url = `");
#nullable restore
#line 255 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                  Write(API.SearchClauses);

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 255 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                     Write(Html.Raw(Model.Term));

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 255 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                           Write(Model.DictionaryId);

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n            var returnUrl = \'");
#nullable restore
#line 256 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                        Write(Context.Request.Path);

#line default
#line hidden
#nullable disable
#nullable restore
#line 256 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                             Write(Context.Request.QueryString);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

            $(""#gridContainerClause"").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""id"",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                columnHidingEnabled: true,
                onCellClick: function (e) {
                    if (e.columnIndex == 0 || e.columnIndex == 3 || e.columnIndex == 2) {
                        var idString = e.data.id;
                        var url = `");
#nullable restore
#line 273 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                              Write(Url.Action("Details", "WordClauses", new { Area = "" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"`;
                        window.location = url + '/' + idString;
                    }
                },
                //selection: {
                //    mode: ""multiple""
                //},
                ""export"": {
                    enabled: false,
                    fileName: ""WordClause"",
                    allowExportSelectedData: false
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {

                    rowRenderingMode: ""virtual""
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20],
                    showPageS");
                WriteLiteral(@"izeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled : true,
                showBorders: false,
                searchPanel: {
                    visible: false
                },
                stateStoring: {
                    enabled:false,
                    type: ""localStorage"",
                    storageKey: ""WordClauseAdmin""
                },
                columns: [
                    {
                        caption:");
                WriteLiteral(" \'");
#nullable restore
#line 332 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Sentence in Arabic"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""arabClause"",
                        allowHeaderFiltering: false,
                        alignment: ""center""
                    },
                    {
                        caption: ' ',
                        dataField: ""arabVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '");
#nullable restore
#line 345 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                   Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '");
#nullable restore
#line 349 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width: 110,
                    },
                    {
                        caption: '");
#nullable restore
#line 364 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Sentence in"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 364 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                             Write(Html.Raw(_userDict.GetDictionaryName()));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                         dataField: ""otherClause"",
                         allowHeaderFiltering: false,
                         alignment: ""center""
                    },
                     {
                        caption: ' ',
                        dataField: ""otherVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '");
#nullable restore
#line 377 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                   Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '");
#nullable restore
#line 381 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                     {
                        caption: '");
#nullable restore
#line 392 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Category"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""categoryName"",
                         allowHeaderFiltering: true,
                         alignment: ""center"",
                         width:140,
                    },
                     {
                        type: ""buttons"",
                        width: 55,
                        caption: '");
#nullable restore
#line 401 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\',\r\n                        buttons: [\r\n                            {\r\n                                hint: \'");
#nullable restore
#line 404 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                  Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                icon: ""share"",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open(""GET"", ""/api/ExportAPI/Phrase/"" + e.row.data.arabClause + ""/"" + e.row.data.otherReader + ""/"" + e.row.data.otherClause + ""/"" + e.row.data.arabReader, false);
                                    req.send();
                                    var a = document.createElement(""a"");
                                    a.setAttribute(""href"", """"+req.responseText);
                                    a.setAttribute(""download"", """" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }

                ]
            });
        });
");
                WriteLiteral("\r\n    </script>\r\n    <script>\r\n            $(function () {\r\n                let url = `");
#nullable restore
#line 428 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                      Write(API.SearchNames);

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 428 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                       Write(Html.Raw(Model.Term));

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 428 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                             Write(Model.DictionaryId);

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n            var returnUrl = \'");
#nullable restore
#line 429 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                        Write(Context.Request.Path);

#line default
#line hidden
#nullable disable
#nullable restore
#line 429 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                             Write(Context.Request.QueryString);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';


                $(""#gridContainerNames"").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""id"",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                    columnHidingEnabled: true,
                onInitNewRow: function(e) {
                    var url = `");
#nullable restore
#line 445 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                          Write(Url.Action("Create", "Names", new { Area = "Admin" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"`;
                    window.location = url;
                },
                onCellClick: function (e) {
                    if (e.columnIndex == 0 || e.columnIndex == 3) {
                        var idString = e.data.id;
                        var url = `");
#nullable restore
#line 451 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                              Write(Url.Action("Details", "Names", new { Area = "" }));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"`;
                        window.location = url + '?id=' + idString;
                    }
                },
                //selection: {
                //    mode: ""multiple""
                //},
                ""export"": {
                    enabled: false,
                    fileName: ""Documents"",
                    allowExportSelectedData: false
                },
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {
                   
                    rowRenderingMode: ""virtual""
                },
                paging: {
                    pageSize: 10
                    },
                    pager: {
                        visible: true,
                        allowedPageSizes: [10");
                WriteLiteral(@", 20],
                        showPageSizeSelector: true,
                        showInfo: true,
                        showNavigationButtons: true,
                    },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: false
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                hoverStateEnabled: true,
                rowAlternationEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: false
                },

                stateStoring: {
                    enabled: false,
                    type: ""localStorage"",
                    storageKey: ""partnersAdmin""
                },
                allowColumnReo");
                WriteLiteral("rdering: false,\r\n                columns: [\r\n                    {\r\n                        caption: \'");
#nullable restore
#line 512 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Names in Arabic"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""arabName"",
                        allowHeaderFiltering: true,
                        alignment: ""center"",

                    },
                     {
                        caption: ' ',
                         dataField: ""arabVoice"",
                         width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '");
#nullable restore
#line 526 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                   Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '");
#nullable restore
#line 530 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width : 110,
                    },
                    {
                        caption: '");
#nullable restore
#line 545 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(Html.Raw(_userDict.GetDictionaryName()));

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 545 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                      Write(SharedLocalizer["Names"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""otherName"",
                        allowHeaderFiltering: true,
                        alignment: ""center"",

                    },
                     {
                        caption: ' ',
                        dataField: ""otherVoice"",
                         width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '");
#nullable restore
#line 559 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                                                   Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '");
#nullable restore
#line 563 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                      {
                        type: ""buttons"",
                        width: 55,
                        caption: '");
#nullable restore
#line 576 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                             Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\',\r\n                        buttons: [\r\n                            {\r\n                                hint: \'");
#nullable restore
#line 579 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Search\Search.cshtml"
                                  Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                icon: ""share"",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open(""GET"", ""/api/ExportAPI/"" + e.row.data.arabName + ""/"" + e.row.data.otherName, false);
                                    req.send();
                                    var a = document.createElement(""a"");
                                    a.setAttribute(""href"", """"+req.responseText);
                                    a.setAttribute(""download"", """" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }
                ]
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ARINLAB.Services.SessionService.UserDictionary _userDict { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHtmlLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<SearchModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
