#pragma checksum "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "579dfab002c1941349a0549af04a43f3a8be4923"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Words_Indexall), @"mvc.1.0.view", @"/Views/Words/Indexall.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ARINLAB\ARINLAB\ARINLAB\Views\_ViewImports.cshtml"
using ARINLAB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ARINLAB\ARINLAB\ARINLAB\Views\_ViewImports.cshtml"
using ARINLAB.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
using ARINLAB.Areas.Admin.Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
using ARINLAB.Controllers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"579dfab002c1941349a0549af04a43f3a8be4923", @"/Views/Words/Indexall.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4fa1d5c591814f7725771882b633ab2ec01fb489", @"/Views/_ViewImports.cshtml")]
    public class Views_Words_Indexall : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<UserDictionaryModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 6 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
  
    ViewData["Title"] = SharedLocalizer["Words"];


#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"flex justify-between flex-col xl:flex-row py-10 h-full xl:mb-0 blog\">\r\n    <div class=\"xl:w-8/12 xl:px-0 px-4 flex-grow\">\r\n");
#nullable restore
#line 15 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
         if (CultureInfo.CurrentCulture.Name.StartsWith("ar"))
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 dir=\"rtl\" class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-right:10%\">");
#nullable restore
#line 17 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                                                                                          Write(SharedLocalizer["Words Collection"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </h2>\r\n");
#nullable restore
#line 18 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
        }
        else
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h2 class=\"md:text-4xl text-2xl font-semibold mb-10\" style=\"font:900; padding-left:10%\">");
#nullable restore
#line 21 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                                                                               Write(SharedLocalizer["Words Collection"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </h2>\r\n");
#nullable restore
#line 22 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"

        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"row\" style=\"padding-left: 10%; padding-right: 10%;\">\r\n            <div id=\"gridContainer\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n    <script>\r\n        $(function () {\r\n            let url = `");
#nullable restore
#line 36 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                  Write(API.GetAllWordsWithDictId);

#line default
#line hidden
#nullable disable
                WriteLiteral("/");
#nullable restore
#line 36 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                             Write(Model.DictionaryId);

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n            var returnUrl = \'");
#nullable restore
#line 37 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                        Write(Context.Request.Path);

#line default
#line hidden
#nullable disable
#nullable restore
#line 37 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                             Write(Context.Request.QueryString);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
            $(""#gridContainer"").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""id"",
                    loadUrl: url,
                    insertUrl: url,
                    updateUrl: url,
                    deleteUrl: url,
                    onBeforeSend: function (method, ajaxOptions) {
                        ajaxOptions.xhrFields = { withCredentials: true };
                    }
                }),
                columnHidingEnabled: true,
                filterPanel: {
                    visible: false
                },
                filterRow: { visible: false },
                remoteOperations: true,
                onRowUpdating: function (e) {
                    e.newData = Object.assign(e.oldData, e.newData)
                },
                scrolling: {
                    
                    rowRenderingMode: ""virtual""
                },
                paging: {
                    pageSize: 10
   ");
                WriteLiteral(@"             },
                pager: {
                    visible: true,
                    allowedPageSizes: [10, 20, 'all'],
                    showPageSizeSelector: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                editing: {
                    useIcons: true,
                    allowUpdating: false,
                    allowDeleting: false,
                    allowAdding: false
                },
                headerFilter: {
                    visible: true
                },
                wordWrapEnabled: true,
                showColumnLines: false,
                showRowLines: true,
                rowAlternationEnabled: true,
                hoverStateEnabled: true,
                showBorders: true,
                searchPanel: {
                    visible: false
                },
                stateStoring: {
                    enabled:false,
                    type: ""localSto");
                WriteLiteral(@"rage"",
                    storageKey: ""WordClauseAdmin""
                },
                 onCellClick: function (e) {
                     if (e.columnIndex == 0 || e.columnIndex == 2 || e.columnIndex == 3) {
                        var idString = e.data.id;
                        var url = `");
#nullable restore
#line 98 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                              Write(Url.Action("Details", "Words", new { Area = "" }));

#line default
#line hidden
#nullable disable
                WriteLiteral("`;\r\n                        window.location = url + \'?id=\' + idString;\r\n                    }\r\n                },\r\n                columns: [\r\n                    {\r\n                        caption: \'");
#nullable restore
#line 104 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                             Write(SharedLocalizer["Arab Words"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""arabWord"",
                        //width:300,
                        allowHeaderFiltering: false,
                        alignment: ""center""
                    },
                    {
                        caption: ' ',
                        dataField: ""arabVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                             if (options.value) {
                                 $('<div>', { class: 'cell' })
                                     .append($('<audio>', { id: options.value, })
                                         .append($('<source>', { src: '");
#nullable restore
#line 118 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                                                   Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                     .append($('<img>', {
                                         onclick: 'playAudio(\'' + options.value + '\')',
                                         style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                         src: '");
#nullable restore
#line 122 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                           Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    },))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        caption: ' ',
                        width: 110,
                    },
                    {
                        caption: '");
#nullable restore
#line 137 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                             Write(SharedLocalizer["Arabic Word in"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 137 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                                                Write(Html.Raw(_userDict.GetDictionaryName()));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        dataField: ""otherWord"",
                        //width: 300,
                        allowHeaderFiltering: false,
                        alignment: ""center""
                    },
                    {
                        caption: ' ',
                        dataField: ""otherVoice"",
                        width: 110,
                        cellTemplate: function (element, options) {
                            if (options.value) {
                                $('<div>', { class: 'cell' })
                                    .append($('<audio>', { id: options.value, })
                                        .append($('<source>', { src: '");
#nullable restore
#line 151 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                                                  Write(SD.HostName);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + options.value, type: 'audio/mpeg' })))
                                    .append($('<img>', {
                                        onclick: 'playAudio(\'' + options.value + '\')',
                                        style: 'padding-left: 10px; padding-right: 40px; cursor:pointer',
                                        src: '");
#nullable restore
#line 155 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                          Write(CultureInfo.CurrentCulture.Name.StartsWith("ar")? "/images/Icons/Voice_L.svg" : "/images/Icons/Voice_R.svg");

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    }))
                                    .appendTo(element);
                            } else {

                            }
                        },
                        allowHeaderFiltering: false,

                    },
                    {
                        type: ""buttons"",
                        width: 55,
                        caption: '");
#nullable restore
#line 168 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                             Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\',\r\n                        buttons: [\r\n                            {\r\n                                hint: \'");
#nullable restore
#line 171 "D:\ARINLAB\ARINLAB\ARINLAB\Views\Words\Indexall.cshtml"
                                  Write(SharedLocalizer["Share"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                icon: ""share"",
                                onClick: function (e) {
                                    var req = new XMLHttpRequest();
                                    req.open(""GET"", ""/api/ExportAPI/"" + e.row.data.arabWord+""/"" + e.row.data.otherWord, false);
                                    req.send();
                                    var a = document.createElement(""a"");
                                    a.setAttribute(""href"", """"+req.responseText);
                                    a.setAttribute(""download"", """" + req.responseText);
                                    document.body.appendChild(a);
                                    a.click();
                                    document.body.removeChild(a);
                                }
                            },
                        ]
                    }
                ]
            });
        });

        function playAudio(id) {
            var x = document.getElementB");
                WriteLiteral("yId(id);\r\n            x.play();\r\n        }\r\n\r\n        function pauseAudio(id) {\r\n            var x = document.getElementById(id);\r\n            x.pause();\r\n        }\r\n    </script>\r\n\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ARINLAB.Services.SessionService.UserDictionary _userDict { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHtmlLocalizer<SharedResource> SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<UserDictionaryModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
